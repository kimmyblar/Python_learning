# Создать программу на Python, позволяющее пользователю управлять коллекцией книг.
# Программа будет поддерживать функции добавления, поиска и хранения книг в текстовом файле.
# Тут мы используем уже знакомый тебе бесконечный цикл while True, в рамках которого
# по вводу определённой цифры, программа будет делать соответствующее действие
# (Добавить книгу, найти книгу, удалить книгу, завершить программу).
#
# Формат хранения книг:
#    - Информация о каждой книге должна храниться в текстовом файле в формате:
#
#      Название|Автор|Год
#
#    - Пример:
#
#      Война и мир|Лев Толстой|1869
#
# Функциональные требования:
#
# 1. Добавление книг:
#    - Пользователь может вводить информацию о книге, включая:
#      - Название
#      - Автора
#      - Год издания
#    - Программа должна сохранять каждую книгу в списке кортежей [('Война и мир','Лев Толстой',1869), ...].
#
#
# 2. Чтение книг из файла:
#    - При запуске программа должна пытаться загрузить список книг из файла (например, books.txt).
#    - Программа должна проверить, существует ли файл, и если нет,
# сообщить об этом и продолжать работу с пустым списком книг.
#
# 3. Поиск книг:
#    - Пользователь может искать книги по названию или автору.
#    - Программа должна выводить все найденные книги в удобочитаемом формате.
#
# 4. Удалить книгу:
#    - Пользователь может удалить книгу по названию или автору.
#    - После удаления книги, при следующем запуске программы, она должна исчезнуть из файла.
#
#
# 5. Отображение списка книг:
#    - После добавления книг и перед завершением программы,
# программа должна выводить весь текущий список книг.
#
# 6. Сохранение новых данных в файл:
#    - Перед завершением работы
# программа должна сохранять обновленный список книг обратно в текстовый файл в указанном формате.
try:
    with open('homework_7.txt', 'r') as books:
        book_list = []
        for line in books:
            parts = line.split('|')
            title, author, year = parts[0], parts[1], parts[2]
            book_list.append ((title, author, year))
except FileNotFoundError:
    print('Файл не найден, продолжаем работу с пустым файлом')
while True:
    print('1 - Добавить книгу')
    print('2 - Найти книгу')
    print('3 - Удалить книгу')
    print('4 - Отобразить все книги')
    print('5 - Завершить программу')
    answer = input('Выберите действие: ')
    if answer == '1':
        title = input('Введите название книги')
        author = input('Введите автора')
        year = int(input('Введите год издания'))
        book_list.append((title, author, year))
    elif answer == '2':
        search = input('Введите автора или название книги, которую хотите найти: ')
        result = []
        for book in book_list:
            if search in book[0].lower() or search in book[1].lower():
                result.append(book)
        if result:
            print('Найденные книги:')
            for book in result:
                print(f'{book[0]}, {book[1]}, {book[2]}')
        else:
            print('Книги не найдено или она не существует')
    elif answer == '3':
        user_delete = input('Введите автора или название книги, которую хотите удалить: ')
        list_after_deleting = []
        list_of_deleted_books = []
        for book in book_list:
            if user_delete in book[0].lower() or user_delete in book[1].lower():
                list_of_deleted_books.append(book)
                for book in list_of_deleted_books:
                    print(f'Вы удалили книгу: {book[0]}, {book[1]}, {book[2]}')
                continue
            else:
                list_after_deleting.append(book)
                for book in list_after_deleting:
                    print(f'{book[0]}, {book[1]}, {book[2]}')
    elif answer == '4':
        print('Ваш список книг: \n')
        for book in book_list:
            print(f'{book[0]},{book[1]},{book[2]}')
        if not book_list:
            print('В списке нет книг')

    elif answer == '5':
        break
    else:
        print('По вашему запросу нет доступного действия. \nПожалуйста выберите действие из списка:')




